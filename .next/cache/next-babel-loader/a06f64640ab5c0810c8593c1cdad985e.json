{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\n\nfunction Index({\n  stars\n}) {\n  return __jsx(\"div\", null, \"Next stars: \", stars);\n}\n\nIndex.getInitialProps = async ctx => {\n  let readFiles = (dirname, onFileContent, onError) => {\n    fs.readdir(dirname, function (err, filenames) {\n      if (err) {\n        onError(err);\n        return;\n      }\n\n      filenames.forEach(function (filename) {\n        fs.readFile(dirname + filename, 'utf-8', function (err, content) {\n          if (err) {\n            onError(err);\n            return;\n          }\n\n          onFileContent(filename, content);\n        });\n      });\n    });\n  };\n\n  const fs = require('fs');\n\n  let blogs = [];\n  const res = fs.readFileSync(\"./data/testing.txt\");\n  const data = res.toString().split(\"|\");\n  return {\n    stars: data[0]\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["c:/projects/blogging_platform/pages/index.js"],"names":["fetch","Index","stars","getInitialProps","ctx","readFiles","dirname","onFileContent","onError","fs","readdir","err","filenames","forEach","filename","readFile","content","require","blogs","res","readFileSync","data","toString","split"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AACxB,SAAO,mCAAkBA,KAAlB,CAAP;AACD;;AAEDD,KAAK,CAACE,eAAN,GAAwB,MAAMC,GAAN,IAAa;AAEnC,MAAIC,SAAS,GAAG,CAACC,OAAD,EAAUC,aAAV,EAAyBC,OAAzB,KAAqC;AACnDC,IAAAA,EAAE,CAACC,OAAH,CAAWJ,OAAX,EAAoB,UAASK,GAAT,EAAcC,SAAd,EAAyB;AAC3C,UAAID,GAAJ,EAAS;AACPH,QAAAA,OAAO,CAACG,GAAD,CAAP;AACA;AACD;;AACDC,MAAAA,SAAS,CAACC,OAAV,CAAkB,UAASC,QAAT,EAAmB;AACnCL,QAAAA,EAAE,CAACM,QAAH,CAAYT,OAAO,GAAGQ,QAAtB,EAAgC,OAAhC,EAAyC,UAASH,GAAT,EAAcK,OAAd,EAAuB;AAC9D,cAAIL,GAAJ,EAAS;AACPH,YAAAA,OAAO,CAACG,GAAD,CAAP;AACA;AACD;;AACDJ,UAAAA,aAAa,CAACO,QAAD,EAAWE,OAAX,CAAb;AACD,SAND;AAOD,OARD;AASD,KAdD;AAeD,GAhBD;;AAmBA,QAAMP,EAAE,GAAGQ,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,QAAMC,GAAG,GAAGV,EAAE,CAACW,YAAH,CAAgB,oBAAhB,CAAZ;AACA,QAAMC,IAAI,GAAGF,GAAG,CAACG,QAAJ,GAAeC,KAAf,CAAqB,GAArB,CAAb;AACA,SAAO;AAAErB,IAAAA,KAAK,EAAEmB,IAAI,CAAC,CAAD;AAAb,GAAP;AACD,CA1BD;;AA4BA,eAAepB,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\n\r\nfunction Index({ stars }) {\r\n  return <div>Next stars: {stars}</div>\r\n}\r\n\r\nIndex.getInitialProps = async ctx => {\r\n\r\n  let readFiles = (dirname, onFileContent, onError) => {\r\n    fs.readdir(dirname, function(err, filenames) {\r\n      if (err) {\r\n        onError(err);\r\n        return;\r\n      }\r\n      filenames.forEach(function(filename) {\r\n        fs.readFile(dirname + filename, 'utf-8', function(err, content) {\r\n          if (err) {\r\n            onError(err);\r\n            return;\r\n          }\r\n          onFileContent(filename, content);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  const fs = require('fs');\r\n  let blogs = [];\r\n  const res = fs.readFileSync(\"./data/testing.txt\");\r\n  const data = res.toString().split(\"|\");\r\n  return { stars: data[0] }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}