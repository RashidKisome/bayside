{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\n\nfunction Index({\n  stars\n}) {\n  return __jsx(\"div\", null, \"Next stars: \", stars);\n}\n\nIndex.getInitialProps = async ctx => {\n  const fs = require('fs');\n\n  let blogs = [];\n  let files = fs.readdirSync(\"./data\", {\n    withFileTypes: true\n  });\n  const filesNames = files.filter(files => !files.isDirectory()).map(files => files.name);\n  filesNames.forEach(file => {\n    let blog = {};\n    let data = fs.readFileSync(\"./data/\" + file).toString();\n    data = data.split(\"|\");\n    blog.title = data[0];\n    blogs.push(blog);\n  });\n  return {\n    stars: blogs[0].title\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["c:/projects/blogging_platform/pages/index.js"],"names":["fetch","Index","stars","getInitialProps","ctx","fs","require","blogs","files","readdirSync","withFileTypes","filesNames","filter","isDirectory","map","name","forEach","file","blog","data","readFileSync","toString","split","title","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AACxB,SAAO,mCAAkBA,KAAlB,CAAP;AACD;;AAEDD,KAAK,CAACE,eAAN,GAAwB,MAAMC,GAAN,IAAa;AACnC,QAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAIC,KAAK,GAAG,EAAZ;AAEA,MAAIC,KAAK,GAAGH,EAAE,CAACI,WAAH,CAAe,QAAf,EAAyB;AAAEC,IAAAA,aAAa,EAAE;AAAjB,GAAzB,CAAZ;AACA,QAAMC,UAAU,GAAGH,KAAK,CACrBI,MADgB,CACTJ,KAAK,IAAI,CAACA,KAAK,CAACK,WAAN,EADD,EAEhBC,GAFgB,CAEZN,KAAK,IAAIA,KAAK,CAACO,IAFH,CAAnB;AAIAJ,EAAAA,UAAU,CAACK,OAAX,CAAmBC,IAAI,IAAI;AACzB,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,IAAI,GAAGd,EAAE,CAACe,YAAH,CAAgB,YAAYH,IAA5B,EAAkCI,QAAlC,EAAX;AACAF,IAAAA,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAW,GAAX,CAAP;AACAJ,IAAAA,IAAI,CAACK,KAAL,GAAaJ,IAAI,CAAC,CAAD,CAAjB;AACAZ,IAAAA,KAAK,CAACiB,IAAN,CAAWN,IAAX;AACD,GAND;AAQA,SAAO;AAAEhB,IAAAA,KAAK,EAAEK,KAAK,CAAC,CAAD,CAAL,CAASgB;AAAlB,GAAP;AACD,CAlBD;;AAoBA,eAAetB,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\r\n\r\nfunction Index({ stars }) {\r\n  return <div>Next stars: {stars}</div>\r\n}\r\n\r\nIndex.getInitialProps = async ctx => {\r\n  const fs = require('fs');\r\n  let blogs = [];\r\n\r\n  let files = fs.readdirSync(\"./data\", { withFileTypes: true });\r\n  const filesNames = files\r\n    .filter(files => !files.isDirectory())\r\n    .map(files => files.name);\r\n\r\n  filesNames.forEach(file => {\r\n    let blog = {};\r\n    let data = fs.readFileSync(\"./data/\" + file).toString();\r\n    data = data.split(\"|\");\r\n    blog.title = data[0];\r\n    blogs.push(blog);\r\n  });\r\n\r\n  return { stars: blogs[0].title }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}