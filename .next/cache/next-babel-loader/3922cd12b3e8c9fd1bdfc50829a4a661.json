{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Header from '../components/header';\nimport Nav from '../components/nav';\n\nfunction Index({\n  blogs\n}) {\n  return __jsx(\"div\", null, __jsx(Header, {\n    title: \"test\"\n  }), __jsx(Nav, null), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, blogs.map((item, key) => {\n    return __jsx(\"div\", {\n      key: key\n    }, __jsx(\"div\", {\n      className: \"col-md-5\"\n    }, __jsx(\"div\", {\n      className: \"primary-item\"\n    }, __jsx(\"a\", {\n      href: \"/blog?title=python_is_great\"\n    }, __jsx(\"h2\", null, item.title), __jsx(\"img\", {\n      src: \"/public/img/blogs/\" + item.image\n    })))));\n  }))));\n}\n\nIndex.getInitialProps = async ctx => {\n  const fs = require('fs');\n\n  let blogs = [];\n  let files = fs.readdirSync(\"./data\", {\n    withFileTypes: true\n  });\n  const filesNames = files.filter(files => !files.isDirectory()).map(files => files.name);\n  filesNames.forEach(file => {\n    let blog = {};\n    let data = fs.readFileSync(\"./data/\" + file).toString();\n    data = data.split(\"|\");\n    blog.title = data[0];\n    blog.image = data[3];\n    blogs.push(blog);\n  });\n  return {\n    blogs: blogs\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["c:/projects/blogging_platform/pages/index.js"],"names":["fetch","Header","Nav","Index","blogs","map","item","key","title","image","getInitialProps","ctx","fs","require","files","readdirSync","withFileTypes","filesNames","filter","isDirectory","name","forEach","file","blog","data","readFileSync","toString","split","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AACxB,SAAO,mBACG,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC;AAAd,IADH,EAEG,MAAC,GAAD,OAFH,EAGG;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGA,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC1B,WAAO;AAAK,MAAA,GAAG,EAAEA;AAAV,OACG;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAG,MAAA,IAAI,EAAC;AAAR,OACE,kBAAKD,IAAI,CAACE,KAAV,CADF,EAEE;AAAK,MAAA,GAAG,EAAE,uBAAuBF,IAAI,CAACG;AAAtC,MAFF,CADF,CADF,CADH,CAAP;AAUG,GAXF,CADH,CADF,CAHH,CAAP;AAoBD;;AAEDN,KAAK,CAACO,eAAN,GAAwB,MAAMC,GAAN,IAAa;AACnC,QAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAIT,KAAK,GAAG,EAAZ;AAEA,MAAIU,KAAK,GAAGF,EAAE,CAACG,WAAH,CAAe,QAAf,EAAyB;AAAEC,IAAAA,aAAa,EAAE;AAAjB,GAAzB,CAAZ;AACA,QAAMC,UAAU,GAAGH,KAAK,CACrBI,MADgB,CACTJ,KAAK,IAAI,CAACA,KAAK,CAACK,WAAN,EADD,EAEhBd,GAFgB,CAEZS,KAAK,IAAIA,KAAK,CAACM,IAFH,CAAnB;AAIAH,EAAAA,UAAU,CAACI,OAAX,CAAmBC,IAAI,IAAI;AACzB,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,IAAI,GAAGZ,EAAE,CAACa,YAAH,CAAgB,YAAYH,IAA5B,EAAkCI,QAAlC,EAAX;AACAF,IAAAA,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAW,GAAX,CAAP;AACAJ,IAAAA,IAAI,CAACf,KAAL,GAAagB,IAAI,CAAC,CAAD,CAAjB;AACAD,IAAAA,IAAI,CAACd,KAAL,GAAae,IAAI,CAAC,CAAD,CAAjB;AACApB,IAAAA,KAAK,CAACwB,IAAN,CAAWL,IAAX;AACD,GAPD;AASA,SAAO;AAAEnB,IAAAA,KAAK,EAAEA;AAAT,GAAP;AACD,CAnBD;;AAqBA,eAAeD,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport Header from '../components/header';\r\nimport Nav from '../components/nav';\r\n\r\nfunction Index({ blogs }) {\r\n  return <div>\r\n            <Header title=\"test\" />\r\n            <Nav />\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                {blogs.map((item, key) => {\r\n                return <div key={key}>\r\n                          <div className=\"col-md-5\">\r\n                            <div className=\"primary-item\">\r\n                              <a href=\"/blog?title=python_is_great\">\r\n                                <h2>{item.title}</h2>\r\n                                <img src={\"/public/img/blogs/\" + item.image} />\r\n                              </a>\r\n                            </div>\r\n                          </div>\r\n                      </div>\r\n                  })}\r\n              </div>\r\n            </div>\r\n        </div>\r\n}\r\n\r\nIndex.getInitialProps = async ctx => {\r\n  const fs = require('fs');\r\n  let blogs = [];\r\n\r\n  let files = fs.readdirSync(\"./data\", { withFileTypes: true });\r\n  const filesNames = files\r\n    .filter(files => !files.isDirectory())\r\n    .map(files => files.name);\r\n\r\n  filesNames.forEach(file => {\r\n    let blog = {};\r\n    let data = fs.readFileSync(\"./data/\" + file).toString();\r\n    data = data.split(\"|\");\r\n    blog.title = data[0];\r\n    blog.image = data[3];\r\n    blogs.push(blog);\r\n  });\r\n\r\n  return { blogs: blogs }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}