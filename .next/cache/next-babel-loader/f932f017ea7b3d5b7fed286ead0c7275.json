{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Header from '../components/header';\nimport Nav from '../components/nav';\n\nfunction Index(_ref) {\n  var blogs = _ref.blogs;\n  return __jsx(\"div\", null, __jsx(Header, {\n    title: \"test\"\n  }), __jsx(Nav, null), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-md-5\"\n  }, __jsx(\"div\", {\n    className: \"primary-item\"\n  }, __jsx(\"a\", {\n    href: \"/blog?title=\" + blogs[0].filename\n  }, __jsx(\"h2\", null, blogs[0].title), __jsx(\"img\", {\n    src: \"/public/img/blogs/\" + blogs[0].image,\n    alt: blogs[0].title\n  })))))));\n}\n\nIndex.getInitialProps = function _callee(ctx) {\n  var fs, blogs, files, filesNames;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          fs = require('fs');\n          blogs = [];\n          files = fs.readdirSync(\"./data\", {\n            withFileTypes: true\n          });\n          filesNames = files.filter(function (files) {\n            return !files.isDirectory();\n          }).map(function (files) {\n            return files.name;\n          });\n          filesNames.forEach(function (file) {\n            var blog = {};\n            var data = fs.readFileSync(\"./data/\" + file).toString();\n            data = data.split(\"|\");\n            blog.title = data[0];\n            blog.filename = data[1];\n            blog.content = data[2];\n            blog.image = data[3];\n            blogs.push(blog);\n          });\n          return _context.abrupt(\"return\", {\n            blogs: blogs\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["c:/projects/blogging_platform/pages/index.js"],"names":["fetch","Header","Nav","Index","blogs","filename","title","image","getInitialProps","ctx","fs","require","files","readdirSync","withFileTypes","filesNames","filter","isDirectory","map","name","forEach","file","blog","data","readFileSync","toString","split","content","push"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;;AAEA,SAASC,KAAT,OAA0B;AAAA,MAATC,KAAS,QAATA,KAAS;AACxB,SAAO,mBACG,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC;AAAd,IADH,EAEG,MAAC,GAAD,OAFH,EAGG;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAG,IAAA,IAAI,EAAE,iBAAiBA,KAAK,CAAC,CAAD,CAAL,CAASC;AAAnC,KACE,kBAAKD,KAAK,CAAC,CAAD,CAAL,CAASE,KAAd,CADF,EAEE;AAAK,IAAA,GAAG,EAAE,uBAAuBF,KAAK,CAAC,CAAD,CAAL,CAASG,KAA1C;AAAiD,IAAA,GAAG,EAAEH,KAAK,CAAC,CAAD,CAAL,CAASE;AAA/D,IAFF,CADF,CADJ,CADF,CADF,CAHH,CAAP;AAgBD;;AAEDH,KAAK,CAACK,eAAN,GAAwB,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,EADgB,GACXC,OAAO,CAAC,IAAD,CADI;AAElBP,UAAAA,KAFkB,GAEV,EAFU;AAIlBQ,UAAAA,KAJkB,GAIVF,EAAE,CAACG,WAAH,CAAe,QAAf,EAAyB;AAAEC,YAAAA,aAAa,EAAE;AAAjB,WAAzB,CAJU;AAKhBC,UAAAA,UALgB,GAKHH,KAAK,CACrBI,MADgB,CACT,UAAAJ,KAAK;AAAA,mBAAI,CAACA,KAAK,CAACK,WAAN,EAAL;AAAA,WADI,EAEhBC,GAFgB,CAEZ,UAAAN,KAAK;AAAA,mBAAIA,KAAK,CAACO,IAAV;AAAA,WAFO,CALG;AAStBJ,UAAAA,UAAU,CAACK,OAAX,CAAmB,UAAAC,IAAI,EAAI;AACzB,gBAAIC,IAAI,GAAG,EAAX;AACA,gBAAIC,IAAI,GAAGb,EAAE,CAACc,YAAH,CAAgB,YAAYH,IAA5B,EAAkCI,QAAlC,EAAX;AACAF,YAAAA,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAW,GAAX,CAAP;AACAJ,YAAAA,IAAI,CAAChB,KAAL,GAAaiB,IAAI,CAAC,CAAD,CAAjB;AACAD,YAAAA,IAAI,CAACjB,QAAL,GAAgBkB,IAAI,CAAC,CAAD,CAApB;AACAD,YAAAA,IAAI,CAACK,OAAL,GAAeJ,IAAI,CAAC,CAAD,CAAnB;AACAD,YAAAA,IAAI,CAACf,KAAL,GAAagB,IAAI,CAAC,CAAD,CAAjB;AACAnB,YAAAA,KAAK,CAACwB,IAAN,CAAWN,IAAX;AACD,WATD;AATsB,2CAoBf;AAAElB,YAAAA,KAAK,EAAEA;AAAT,WApBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAuBA,eAAeD,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport Header from '../components/header';\r\nimport Nav from '../components/nav';\r\n\r\nfunction Index({ blogs }) {\r\n  return <div>\r\n            <Header title=\"test\" />\r\n            <Nav />\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                    <div className=\"primary-item\">\r\n                      <a href={\"/blog?title=\" + blogs[0].filename}>\r\n                        <h2>{blogs[0].title}</h2>\r\n                        <img src={\"/public/img/blogs/\" + blogs[0].image} alt={blogs[0].title} />\r\n                      </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n}\r\n\r\nIndex.getInitialProps = async ctx => {\r\n  const fs = require('fs');\r\n  let blogs = [];\r\n\r\n  let files = fs.readdirSync(\"./data\", { withFileTypes: true });\r\n  const filesNames = files\r\n    .filter(files => !files.isDirectory())\r\n    .map(files => files.name);\r\n\r\n  filesNames.forEach(file => {\r\n    let blog = {};\r\n    let data = fs.readFileSync(\"./data/\" + file).toString();\r\n    data = data.split(\"|\");\r\n    blog.title = data[0];\r\n    blog.filename = data[1];\r\n    blog.content = data[2];\r\n    blog.image = data[3];\r\n    blogs.push(blog);\r\n  });\r\n\r\n  return { blogs: blogs }\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}